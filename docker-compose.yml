services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=sqlite:///./analysis.db
      - FRONTEND_URL=http://localhost:5173
      - TRANSFORMERS_OFFLINE=0
      - HF_HUB_ENABLE_HF_TRANSFER=1
      - HF_HUB_DOWNLOAD_TIMEOUT=300
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /app
    command: >
      sh -c "pip install --no-cache-dir --upgrade pip &&
             pip install --no-cache-dir -r requirements.txt &&
             python -c 'from transformers import pipeline; pipeline(\"text-classification\", model=\"j-hartmann/emotion-english-distilroberta-base\", timeout=300)' &&
             uvicorn app.main:app --host 0.0.0.0 --port 8000"

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - app-network
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://localhost:8000
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app

  # Optional: Prometheus configuration
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      # Create a prometheus directory if it doesn't exist
      - ./prometheus:/etc/prometheus
    # Remove the specific file mapping
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - app-network
    depends_on:
      - backend

networks:
  app-network:
    driver: bridge